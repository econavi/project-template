clearfix()
	zoom 1
	&:after
	&:before
		content ""
		display table
	&:after
		clear both

// обрезка текста с многоточием 
text-ellipsis()
	overflow hidden
	text-overflow ellipsis
	white-space nowrap

// доступно скрыть элемент 
visualli-hidden()
	position absolute
	width 1px
	height 1px
	margin -1px
	padding 0
	border 0
	clip rect(0 0 0 0)
	overflow hidden

/*-----------------------------------------*/

/* Safari mobile */

// плавная прокрутка в Safari mobile
smooth-scroll()
	overflow-y auto
	-webkit-overflow-scrolling touch

// отменяет подсветку при тапе по активным элементам в Safari mobile
not-tap-color()
	-webkit-tap-highlight-color: transparent;

/*-----------------------------------------*/

/* Media */

media-touch()
	@media only screen and (pointer:coarse)
		{block}

media($media)
	@media only screen and (min-width: $media)
		{block}

/* Использование: */
// .title
// 	display block	
// 	+media($media-xll)
// 		display none


/*-----------------------------------------*/

/* Debugers */

x(color)
	outline 2px solid lighten(color, 50%)
	outline-offset -2px

xx(color)
	background rgba(color, 0.1)

xxx(color)
	outline 2px solid color
	outline-offset -2px
	background rgba(color, 0.1)


/* --------------------------------------------

		Изменение велечены текста в приделах заданных размеров, относительно viewport экрана.

		Используется формула Mike Riethmuller:
		font-size: calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));

		Пример:
		font-size calc(14px + (26 - 14) * ((100vw - 320px) / (1600 - 320)))

		https://madebymike.com.au/writing/fluid-type-calc-examples/
		https://webformyself.com/zhidkaya-tipografika/

  */

$setResponsiveFont($smallFont, $bigFont, $smallViewport, $bigViewport)
	font-size "calc(%s%s + (%s - %s) * ((100vw - %s%s) / (%s - %s)))" \
	% ($smallFont px $bigFont $smallFont $smallViewport px $bigViewport $smallViewport)
	
/* -------------------------------------------- */












